"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/contact/page",{

/***/ "(app-pages-browser)/./utility/typing.js":
/*!***************************!*\
  !*** ./utility/typing.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   typing: function() { return /* binding */ typing; }\n/* harmony export */ });\nconst typing = ()=>{\n    const text = document.querySelector(\".trm-typed-text\");\n    const words = [\n        \"UI/UX Designer\",\n        \"Web Developer\",\n        \"Photographer\",\n        \"Dreamer :)\"\n    ];\n    setTyper(text, words);\n    function setTyper(element, words) {\n        const LETTER_TYPE_DELAY = 100;\n        const WORD_STAY_DELAY = 3000;\n        const DIRECTION_FORWARDS = 0;\n        const DIRECTION_BACKWARDS = 1;\n        var direction = DIRECTION_FORWARDS;\n        var wordIndex = 0;\n        var letterIndex = 0;\n        var wordTypeInterval;\n        startTyping();\n        function startTyping() {\n            wordTypeInterval = setInterval(typeLetter, LETTER_TYPE_DELAY);\n        }\n        function typeLetter() {\n            const word = words[wordIndex];\n            if (direction == DIRECTION_FORWARDS) {\n                letterIndex++;\n                if (letterIndex == word.length) {\n                    direction = DIRECTION_BACKWARDS;\n                    clearInterval(wordTypeInterval);\n                    setTimeout(startTyping, WORD_STAY_DELAY);\n                }\n            } else if (direction == DIRECTION_BACKWARDS) {\n                letterIndex--;\n                if (letterIndex == 0) {\n                    nextWord();\n                }\n            }\n            const textToType = word.substring(0, letterIndex);\n            element.textContent = textToType;\n        }\n        function nextWord() {\n            letterIndex = 0;\n            direction = DIRECTION_FORWARDS;\n            wordIndex++;\n            if (wordIndex == words.length) {\n                wordIndex = 0;\n            }\n        }\n    }\n    /*----------------------------------------------------------\n------------------------------------------------------------\n\nREINIT\n\n------------------------------------------------------------\n----------------------------------------------------------*/ document.addEventListener(\"swup:contentReplaced\", function() {\n        const text = document.querySelector(\".trm-typed-text\");\n        const words = [\n            \"Web Developer\",\n            \"Dreamer :)\"\n        ];\n        setTyper(text, words);\n        function setTyper(element, words) {\n            const LETTER_TYPE_DELAY = 100;\n            const WORD_STAY_DELAY = 3000;\n            const DIRECTION_FORWARDS = 0;\n            const DIRECTION_BACKWARDS = 1;\n            var direction = DIRECTION_FORWARDS;\n            var wordIndex = 0;\n            var letterIndex = 0;\n            var wordTypeInterval;\n            startTyping();\n            function startTyping() {\n                wordTypeInterval = setInterval(typeLetter, LETTER_TYPE_DELAY);\n            }\n            function typeLetter() {\n                const word = words[wordIndex];\n                if (direction == DIRECTION_FORWARDS) {\n                    letterIndex++;\n                    if (letterIndex == word.length) {\n                        direction = DIRECTION_BACKWARDS;\n                        clearInterval(wordTypeInterval);\n                        setTimeout(startTyping, WORD_STAY_DELAY);\n                    }\n                } else if (direction == DIRECTION_BACKWARDS) {\n                    letterIndex--;\n                    if (letterIndex == 0) {\n                        nextWord();\n                    }\n                }\n                const textToType = word.substring(0, letterIndex);\n                element.textContent = textToType;\n            }\n            function nextWord() {\n                letterIndex = 0;\n                direction = DIRECTION_FORWARDS;\n                wordIndex++;\n                if (wordIndex == words.length) {\n                    wordIndex = 0;\n                }\n            }\n        }\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxpdHkvdHlwaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxTQUFTO0lBQ3BCLE1BQU1DLE9BQU9DLFNBQVNDLGFBQWEsQ0FBQztJQUVwQyxNQUFNQyxRQUFRO1FBQ1o7UUFDQTtRQUNBO1FBQ0E7S0FDRDtJQUVEQyxTQUFTSixNQUFNRztJQUVmLFNBQVNDLFNBQVNDLE9BQU8sRUFBRUYsS0FBSztRQUM5QixNQUFNRyxvQkFBb0I7UUFDMUIsTUFBTUMsa0JBQWtCO1FBRXhCLE1BQU1DLHFCQUFxQjtRQUMzQixNQUFNQyxzQkFBc0I7UUFFNUIsSUFBSUMsWUFBWUY7UUFDaEIsSUFBSUcsWUFBWTtRQUNoQixJQUFJQyxjQUFjO1FBRWxCLElBQUlDO1FBRUpDO1FBRUEsU0FBU0E7WUFDUEQsbUJBQW1CRSxZQUFZQyxZQUFZVjtRQUM3QztRQUVBLFNBQVNVO1lBQ1AsTUFBTUMsT0FBT2QsS0FBSyxDQUFDUSxVQUFVO1lBRTdCLElBQUlELGFBQWFGLG9CQUFvQjtnQkFDbkNJO2dCQUVBLElBQUlBLGVBQWVLLEtBQUtDLE1BQU0sRUFBRTtvQkFDOUJSLFlBQVlEO29CQUNaVSxjQUFjTjtvQkFDZE8sV0FBV04sYUFBYVA7Z0JBQzFCO1lBQ0YsT0FBTyxJQUFJRyxhQUFhRCxxQkFBcUI7Z0JBQzNDRztnQkFFQSxJQUFJQSxlQUFlLEdBQUc7b0JBQ3BCUztnQkFDRjtZQUNGO1lBRUEsTUFBTUMsYUFBYUwsS0FBS00sU0FBUyxDQUFDLEdBQUdYO1lBRXJDUCxRQUFRbUIsV0FBVyxHQUFHRjtRQUN4QjtRQUVBLFNBQVNEO1lBQ1BULGNBQWM7WUFDZEYsWUFBWUY7WUFDWkc7WUFFQSxJQUFJQSxhQUFhUixNQUFNZSxNQUFNLEVBQUU7Z0JBQzdCUCxZQUFZO1lBQ2Q7UUFDRjtJQUNGO0lBRUE7Ozs7OzswREFNd0QsR0FDeERWLFNBQVN3QixnQkFBZ0IsQ0FBQyx3QkFBd0I7UUFDaEQsTUFBTXpCLE9BQU9DLFNBQVNDLGFBQWEsQ0FBQztRQUVwQyxNQUFNQyxRQUFRO1lBQ1o7WUFDQTtTQUNEO1FBRURDLFNBQVNKLE1BQU1HO1FBRWYsU0FBU0MsU0FBU0MsT0FBTyxFQUFFRixLQUFLO1lBQzlCLE1BQU1HLG9CQUFvQjtZQUMxQixNQUFNQyxrQkFBa0I7WUFFeEIsTUFBTUMscUJBQXFCO1lBQzNCLE1BQU1DLHNCQUFzQjtZQUU1QixJQUFJQyxZQUFZRjtZQUNoQixJQUFJRyxZQUFZO1lBQ2hCLElBQUlDLGNBQWM7WUFFbEIsSUFBSUM7WUFFSkM7WUFFQSxTQUFTQTtnQkFDUEQsbUJBQW1CRSxZQUFZQyxZQUFZVjtZQUM3QztZQUVBLFNBQVNVO2dCQUNQLE1BQU1DLE9BQU9kLEtBQUssQ0FBQ1EsVUFBVTtnQkFFN0IsSUFBSUQsYUFBYUYsb0JBQW9CO29CQUNuQ0k7b0JBRUEsSUFBSUEsZUFBZUssS0FBS0MsTUFBTSxFQUFFO3dCQUM5QlIsWUFBWUQ7d0JBQ1pVLGNBQWNOO3dCQUNkTyxXQUFXTixhQUFhUDtvQkFDMUI7Z0JBQ0YsT0FBTyxJQUFJRyxhQUFhRCxxQkFBcUI7b0JBQzNDRztvQkFFQSxJQUFJQSxlQUFlLEdBQUc7d0JBQ3BCUztvQkFDRjtnQkFDRjtnQkFFQSxNQUFNQyxhQUFhTCxLQUFLTSxTQUFTLENBQUMsR0FBR1g7Z0JBRXJDUCxRQUFRbUIsV0FBVyxHQUFHRjtZQUN4QjtZQUVBLFNBQVNEO2dCQUNQVCxjQUFjO2dCQUNkRixZQUFZRjtnQkFDWkc7Z0JBRUEsSUFBSUEsYUFBYVIsTUFBTWUsTUFBTSxFQUFFO29CQUM3QlAsWUFBWTtnQkFDZDtZQUNGO1FBQ0Y7SUFDRjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbGl0eS90eXBpbmcuanM/YzlmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdHlwaW5nID0gKCkgPT4ge1xuICBjb25zdCB0ZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50cm0tdHlwZWQtdGV4dFwiKTtcblxuICBjb25zdCB3b3JkcyA9IFtcbiAgICBcIlVJL1VYIERlc2lnbmVyXCIsXG4gICAgXCJXZWIgRGV2ZWxvcGVyXCIsXG4gICAgXCJQaG90b2dyYXBoZXJcIixcbiAgICBcIkRyZWFtZXIgOilcIixcbiAgXTtcblxuICBzZXRUeXBlcih0ZXh0LCB3b3Jkcyk7XG5cbiAgZnVuY3Rpb24gc2V0VHlwZXIoZWxlbWVudCwgd29yZHMpIHtcbiAgICBjb25zdCBMRVRURVJfVFlQRV9ERUxBWSA9IDEwMDtcbiAgICBjb25zdCBXT1JEX1NUQVlfREVMQVkgPSAzMDAwO1xuXG4gICAgY29uc3QgRElSRUNUSU9OX0ZPUldBUkRTID0gMDtcbiAgICBjb25zdCBESVJFQ1RJT05fQkFDS1dBUkRTID0gMTtcblxuICAgIHZhciBkaXJlY3Rpb24gPSBESVJFQ1RJT05fRk9SV0FSRFM7XG4gICAgdmFyIHdvcmRJbmRleCA9IDA7XG4gICAgdmFyIGxldHRlckluZGV4ID0gMDtcblxuICAgIHZhciB3b3JkVHlwZUludGVydmFsO1xuXG4gICAgc3RhcnRUeXBpbmcoKTtcblxuICAgIGZ1bmN0aW9uIHN0YXJ0VHlwaW5nKCkge1xuICAgICAgd29yZFR5cGVJbnRlcnZhbCA9IHNldEludGVydmFsKHR5cGVMZXR0ZXIsIExFVFRFUl9UWVBFX0RFTEFZKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0eXBlTGV0dGVyKCkge1xuICAgICAgY29uc3Qgd29yZCA9IHdvcmRzW3dvcmRJbmRleF07XG5cbiAgICAgIGlmIChkaXJlY3Rpb24gPT0gRElSRUNUSU9OX0ZPUldBUkRTKSB7XG4gICAgICAgIGxldHRlckluZGV4Kys7XG5cbiAgICAgICAgaWYgKGxldHRlckluZGV4ID09IHdvcmQubGVuZ3RoKSB7XG4gICAgICAgICAgZGlyZWN0aW9uID0gRElSRUNUSU9OX0JBQ0tXQVJEUztcbiAgICAgICAgICBjbGVhckludGVydmFsKHdvcmRUeXBlSW50ZXJ2YWwpO1xuICAgICAgICAgIHNldFRpbWVvdXQoc3RhcnRUeXBpbmcsIFdPUkRfU1RBWV9ERUxBWSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZGlyZWN0aW9uID09IERJUkVDVElPTl9CQUNLV0FSRFMpIHtcbiAgICAgICAgbGV0dGVySW5kZXgtLTtcblxuICAgICAgICBpZiAobGV0dGVySW5kZXggPT0gMCkge1xuICAgICAgICAgIG5leHRXb3JkKCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY29uc3QgdGV4dFRvVHlwZSA9IHdvcmQuc3Vic3RyaW5nKDAsIGxldHRlckluZGV4KTtcblxuICAgICAgZWxlbWVudC50ZXh0Q29udGVudCA9IHRleHRUb1R5cGU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbmV4dFdvcmQoKSB7XG4gICAgICBsZXR0ZXJJbmRleCA9IDA7XG4gICAgICBkaXJlY3Rpb24gPSBESVJFQ1RJT05fRk9SV0FSRFM7XG4gICAgICB3b3JkSW5kZXgrKztcblxuICAgICAgaWYgKHdvcmRJbmRleCA9PSB3b3Jkcy5sZW5ndGgpIHtcbiAgICAgICAgd29yZEluZGV4ID0gMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5SRUlOSVRcblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN3dXA6Y29udGVudFJlcGxhY2VkXCIsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCB0ZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50cm0tdHlwZWQtdGV4dFwiKTtcblxuICAgIGNvbnN0IHdvcmRzID0gW1xuICAgICAgXCJXZWIgRGV2ZWxvcGVyXCIsXG4gICAgICBcIkRyZWFtZXIgOilcIixcbiAgICBdO1xuXG4gICAgc2V0VHlwZXIodGV4dCwgd29yZHMpO1xuXG4gICAgZnVuY3Rpb24gc2V0VHlwZXIoZWxlbWVudCwgd29yZHMpIHtcbiAgICAgIGNvbnN0IExFVFRFUl9UWVBFX0RFTEFZID0gMTAwO1xuICAgICAgY29uc3QgV09SRF9TVEFZX0RFTEFZID0gMzAwMDtcblxuICAgICAgY29uc3QgRElSRUNUSU9OX0ZPUldBUkRTID0gMDtcbiAgICAgIGNvbnN0IERJUkVDVElPTl9CQUNLV0FSRFMgPSAxO1xuXG4gICAgICB2YXIgZGlyZWN0aW9uID0gRElSRUNUSU9OX0ZPUldBUkRTO1xuICAgICAgdmFyIHdvcmRJbmRleCA9IDA7XG4gICAgICB2YXIgbGV0dGVySW5kZXggPSAwO1xuXG4gICAgICB2YXIgd29yZFR5cGVJbnRlcnZhbDtcblxuICAgICAgc3RhcnRUeXBpbmcoKTtcblxuICAgICAgZnVuY3Rpb24gc3RhcnRUeXBpbmcoKSB7XG4gICAgICAgIHdvcmRUeXBlSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCh0eXBlTGV0dGVyLCBMRVRURVJfVFlQRV9ERUxBWSk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIHR5cGVMZXR0ZXIoKSB7XG4gICAgICAgIGNvbnN0IHdvcmQgPSB3b3Jkc1t3b3JkSW5kZXhdO1xuXG4gICAgICAgIGlmIChkaXJlY3Rpb24gPT0gRElSRUNUSU9OX0ZPUldBUkRTKSB7XG4gICAgICAgICAgbGV0dGVySW5kZXgrKztcblxuICAgICAgICAgIGlmIChsZXR0ZXJJbmRleCA9PSB3b3JkLmxlbmd0aCkge1xuICAgICAgICAgICAgZGlyZWN0aW9uID0gRElSRUNUSU9OX0JBQ0tXQVJEUztcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwod29yZFR5cGVJbnRlcnZhbCk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KHN0YXJ0VHlwaW5nLCBXT1JEX1NUQVlfREVMQVkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChkaXJlY3Rpb24gPT0gRElSRUNUSU9OX0JBQ0tXQVJEUykge1xuICAgICAgICAgIGxldHRlckluZGV4LS07XG5cbiAgICAgICAgICBpZiAobGV0dGVySW5kZXggPT0gMCkge1xuICAgICAgICAgICAgbmV4dFdvcmQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB0ZXh0VG9UeXBlID0gd29yZC5zdWJzdHJpbmcoMCwgbGV0dGVySW5kZXgpO1xuXG4gICAgICAgIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0VG9UeXBlO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBuZXh0V29yZCgpIHtcbiAgICAgICAgbGV0dGVySW5kZXggPSAwO1xuICAgICAgICBkaXJlY3Rpb24gPSBESVJFQ1RJT05fRk9SV0FSRFM7XG4gICAgICAgIHdvcmRJbmRleCsrO1xuXG4gICAgICAgIGlmICh3b3JkSW5kZXggPT0gd29yZHMubGVuZ3RoKSB7XG4gICAgICAgICAgd29yZEluZGV4ID0gMDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuIl0sIm5hbWVzIjpbInR5cGluZyIsInRleHQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3b3JkcyIsInNldFR5cGVyIiwiZWxlbWVudCIsIkxFVFRFUl9UWVBFX0RFTEFZIiwiV09SRF9TVEFZX0RFTEFZIiwiRElSRUNUSU9OX0ZPUldBUkRTIiwiRElSRUNUSU9OX0JBQ0tXQVJEUyIsImRpcmVjdGlvbiIsIndvcmRJbmRleCIsImxldHRlckluZGV4Iiwid29yZFR5cGVJbnRlcnZhbCIsInN0YXJ0VHlwaW5nIiwic2V0SW50ZXJ2YWwiLCJ0eXBlTGV0dGVyIiwid29yZCIsImxlbmd0aCIsImNsZWFySW50ZXJ2YWwiLCJzZXRUaW1lb3V0IiwibmV4dFdvcmQiLCJ0ZXh0VG9UeXBlIiwic3Vic3RyaW5nIiwidGV4dENvbnRlbnQiLCJhZGRFdmVudExpc3RlbmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utility/typing.js\n"));

/***/ })

});